{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"o0foam.","url":"https://o0foam.github.io"},"pages":[{"title":"o0foam的自我介绍","date":"2018-12-13T15:24:33.631Z","updated":"2018-12-13T15:24:33.631Z","comments":true,"path":"about/index.html","permalink":"https://o0foam.github.io/about/index.html","excerpt":"","text":"你值得更好的"}],"posts":[{"title":"颜色收集","slug":"颜色收集","date":"2018-12-26T01:06:26.000Z","updated":"2018-12-28T13:48:47.384Z","comments":true,"path":"2018/12/26/颜色收集/","link":"","permalink":"https://o0foam.github.io/2018/12/26/颜色收集/","excerpt":"","text":"绿色#32596D#007A37#00B050#33AB65#00AEAD#48B5B5#12C6AA#5CD1A6#7DE6C2#95F492 红色#AB1149#BD1531#D6497D#E03735#FF6369#F47E88#FF8C8C#FBBDC9 橙色#B63424#B63A24#E03735#FF5640#FB6D00#FF8C21#FFAB63#FFB978 黄色#C29D6D#E6C293#FBB318#FFCD61#FFE669#FEF592#FEF8B7 蓝色#1B8FC6#465BC2#637AED#63BDE0#7DD1F0#79E8E8#B2D7E5 紫色#6423B6#8967A6#AB83CF#C2B5FA 黑色#313130#2C353D#D8D9D9","categories":[],"tags":[]},{"title":"父组件调用子组件函数","slug":"父组件获取子组件的值","date":"2018-12-25T12:25:32.000Z","updated":"2018-12-28T13:48:39.146Z","comments":true,"path":"2018/12/25/父组件获取子组件的值/","link":"","permalink":"https://o0foam.github.io/2018/12/25/父组件获取子组件的值/","excerpt":"","text":"vue文件目录如下：在father.vue组件里输入：1234567891011121314151617&lt;template&gt; &lt;div&gt; &lt;child ref=\"fun\"&gt;&lt;/child&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import child from \"./child\"export default &#123; components:&#123; child &#125;, mounted()&#123; this.$refs.fun.childFun() console.log(this.$refs.fun.title); &#125;&#125;&lt;/script&gt; 在child.vue里面输入：1234567891011121314151617&lt;template&gt; &lt;div&gt;子组件&lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123; data()&#123; return&#123; title: \"我是子组件的title\" &#125; &#125;, methods:&#123; childFun()&#123; console.log(\"调用成功\"); &#125; &#125;&#125;&lt;/script&gt; 运行结果： 总结：父组件调用子组件的函数首先要给组件便签一个ref的自定义属性，然后在调用时，用$refs去获取它，接着就可以获取子组件的值了。注意：使用该方法也可以调用子组件的函数","categories":[],"tags":[{"name":"vue","slug":"vue","permalink":"https://o0foam.github.io/tags/vue/"}]},{"title":"css发光效果","slug":"css发光效果","date":"2018-12-25T01:12:26.000Z","updated":"2018-12-25T15:23:46.335Z","comments":true,"path":"2018/12/25/css发光效果/","link":"","permalink":"https://o0foam.github.io/2018/12/25/css发光效果/","excerpt":"","text":"不是文字的时候：html部分1&lt;div class=\"circle\"&gt;&lt;/div&gt; css部分1234567.circle &#123; height: 50px; width: 50px; border-radius: 50%; background: #12c6aa; box-shadow: 0 0 30px #12c6aa; &#125; 运行结果 文字的发光发亮效果html部分1&lt;div class=\".text_light\"&gt;&lt;/div&gt; css部分1234.text_light&#123; font-size: 20px; text-shadow: 0 0 15px #fff, 0 0 15px #fff, 0 0 15px #fff, 0 0 15px #fff; &#125; 注意：如果发亮效果不够，可以加个逗号，继续添加类型的样式","categories":[],"tags":[{"name":"css","slug":"css","permalink":"https://o0foam.github.io/tags/css/"}]},{"title":"css3闪烁效果","slug":"css闪烁效果","date":"2018-12-25T00:56:57.000Z","updated":"2018-12-25T15:15:36.626Z","comments":true,"path":"2018/12/25/css闪烁效果/","link":"","permalink":"https://o0foam.github.io/2018/12/25/css闪烁效果/","excerpt":"","text":"dom部分1&lt;div class=\"blink\"&gt;&lt;/div&gt; style部分1234567891011121314151617@keyframes blinking &#123; 0% &#123; opacity: 1; &#125; 50% &#123; opacity: 0; &#125; 100% &#123; opacity: 1; &#125;&#125;.blink &#123; height: 100px; width: 100px; background: #ff3; animation: blinking 0.5s infinite; &#125; 定义一个变量blinking，设置好他的时间轴，在类选择器blink里的animation设置好时间。","categories":[],"tags":[{"name":"css","slug":"css","permalink":"https://o0foam.github.io/tags/css/"}]},{"title":"响应式布局","slug":"响应式布局","date":"2018-12-25T00:32:06.000Z","updated":"2018-12-25T15:20:02.174Z","comments":true,"path":"2018/12/25/响应式布局/","link":"","permalink":"https://o0foam.github.io/2018/12/25/响应式布局/","excerpt":"","text":"1234567891011html&#123; font-size: 100px !important; &#125;@media screen and (min-width: 1366px) and (max-width: 1919px) &#123; html &#123; font-size: 85px !important; &#125; .login_box &#123; margin-left: 8rem; &#125;&#125;","categories":[],"tags":[{"name":"css","slug":"css","permalink":"https://o0foam.github.io/tags/css/"}]},{"title":"vue2.0子同级组件的通信方法","slug":"vue2.0同级组件的通信方法","date":"2018-12-20T12:02:27.000Z","updated":"2018-12-25T15:29:07.673Z","comments":true,"path":"2018/12/20/vue2.0同级组件的通信方法/","link":"","permalink":"https://o0foam.github.io/2018/12/20/vue2.0同级组件的通信方法/","excerpt":"","text":"vue父子组件之间可以通过props和$emit进行通信，但是同级组件的通信会麻烦一点（不用vuex），以下是同级组件的通信方法。 目录结构： 在comunicate.js里面输入12import Vue from \"vue\";export default new Vue; 该步骤的目的是为了实例化一个新的vue，让childOne.vue和childTwo.vue通过comunicate这个中介，能访问到同一个‘变量’。 在father.vue里面输入1234567891011121314151617181920212223242526&lt;template&gt; &lt;div class=\"father\"&gt; &lt;div&gt; &lt;p&gt;我是父组件&lt;/p&gt; &lt;child-one&gt;&lt;/child-one&gt; &lt;child-two&gt;&lt;/child-two&gt; &lt;/div&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import childOne from \"./childOne\"import childTwo from \"./childTwo\"export default &#123; components: &#123; childOne, childTwo &#125;&#125;&lt;/script&gt;&lt;style&gt;.father&#123; width: 500px; height: 500px; background: aquamarine;&#125;&lt;/style&gt; 在childOne.vue里面输入12345678910111213141516171819202122232425&lt;template&gt; &lt;div class=\"childone\" @click=\"childoneFun\"&gt; &lt;p&gt;childone&lt;/p&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import comunicate from \"./comunicate\";export default &#123; methods:&#123; childoneFun()&#123; comunicate.$emit(\"one\", \"我是从childone传过来的\"); &#125; &#125;&#125;&lt;/script&gt;&lt;style&gt;.childone&#123; float: left; width: 100px; height: 100px; background: cornflowerblue;&#125;&lt;/style&gt; 用$emit进行发送信号 在childTwo.vue里面输入1234567891011121314151617181920212223242526272829303132&lt;template&gt; &lt;div class=\"childtwo\"&gt; &lt;p&gt;childtwo&lt;/p&gt; &lt;span&gt;&#123;&#123;msg&#125;&#125;&lt;/span&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import comunicate from \"./comunicate\";export default &#123; data()&#123; return&#123; msg: \"注意我的值\" &#125; &#125;, mounted()&#123; const vm = this; comunicate.$on(\"one\",function(msg)&#123; vm.msg = msg; &#125;) &#125; &#125;&lt;/script&gt;&lt;style&gt;.childtwo&#123; float: right; width: 100px; height: 100px; background: salmon;&#125;&lt;/style&gt; 运行结果 总结用$on进行接受信号，因为他们都在同一个vue实例（即comunicate）里面，所以能进行信息交流，要注意的是childTwo里的const vm = this;是绝对不能少的","categories":[],"tags":[{"name":"vue","slug":"vue","permalink":"https://o0foam.github.io/tags/vue/"}]},{"title":"import引入文件方法","slug":"import引入文件方法","date":"2018-12-19T11:41:21.000Z","updated":"2018-12-20T14:28:21.429Z","comments":true,"path":"2018/12/19/import引入文件方法/","link":"","permalink":"https://o0foam.github.io/2018/12/19/import引入文件方法/","excerpt":"","text":"import引入css:1@import url(\"../static/css/index_section.css\"); import引入noude_modules的插件:1import VueI18n from 'vue-i18n' import引入单个对象：（用export defailt只能抛出一个对象，但可以在其他页面里自定义这个对象的名字）在需要抛出的js文件里面写入(fun是函数)1234function fun()&#123; console.log(\"我是fun函数\")&#125;export default fun; 在另外一个js文件里面引入： 此时可以给该函数自定义一个名字1import templates from './templates'; import引入多个对象：在需要抛出的js文件里面写入(init和buildMenus是函数)12345function init()&#123; console.log(\"我是init函数\")&#125;const obj1 = \"我是常量obj1\"export &#123; init, obj1 &#125;; 在另外一个js文件里面引入： 不能自定义一个名字1import &#123; init, obj1 &#125; from './文件名';","categories":[],"tags":[{"name":"others","slug":"others","permalink":"https://o0foam.github.io/tags/others/"}]},{"title":"实用工具","slug":"实用工具","date":"2018-12-17T02:20:37.000Z","updated":"2018-12-26T15:54:16.145Z","comments":true,"path":"2018/12/17/实用工具/","link":"","permalink":"https://o0foam.github.io/2018/12/17/实用工具/","excerpt":"","text":"图片无损压缩 低多边形制作 前端搜索引擎 PS网页版 生成RESTful Web API文档 打字练习网站 javascript动画库 Animate.css 搜图网站 站酷 千图网 pixabay 苹果手机有这款网址的APP哦 alpha 图片搜索引擎 librestock 需翻墙不然打开很慢 unsplash 金属立体风 脑洞大开的设计师 游戏CG 美食 下载无法保存的图片 直接复制图片所在网页链接进去即可，点击Download就会自动下载。 吸收成熟的颜色–怪兽 提高审美 需要翻墙 配色–渐变色 图标 熊猫 阿里巴巴矢量图标图库 设计风格","categories":[],"tags":[{"name":"others","slug":"others","permalink":"https://o0foam.github.io/tags/others/"}]},{"title":"前端知识网页","slug":"前端知识网页","date":"2018-12-17T01:19:07.000Z","updated":"2018-12-18T15:17:26.941Z","comments":true,"path":"2018/12/17/前端知识网页/","link":"","permalink":"https://o0foam.github.io/2018/12/17/前端知识网页/","excerpt":"","text":"详解css的Flex布局 理解跨域及常用解决方案 CSS 列表项布局技巧","categories":[],"tags":[{"name":"others","slug":"others","permalink":"https://o0foam.github.io/tags/others/"}]},{"title":"vue组件化开发","slug":"vue组件化开发","date":"2018-12-17T00:40:05.000Z","updated":"2018-12-20T14:28:31.109Z","comments":true,"path":"2018/12/17/vue组件化开发/","link":"","permalink":"https://o0foam.github.io/2018/12/17/vue组件化开发/","excerpt":"","text":"文件目录：其中index.vue为父组件，v-common为子组件记得先配置好路由 组件引入步骤：1.在父组件的script里面用import引入1import vCommon from \"./v-common\" 2.用components注册该组件1components: &#123; vCommon &#125; 3.template标签里面写1&lt;v-common&gt;&lt;v-common/&gt; 引入完成注意:也可以写成1&lt;v-common/&gt; 通过Props向子组件传递数据1.在index.vue里的data(){}里面输入一个对象1234try_data: &#123; id: 1, text: \"我是从父组件里传过来的参数\"&#125; 并且把该对象信息‘发送’给其子组件1&lt;v-common :indexData=try_data&gt;&lt;/v-common&gt; 2.在子组件v-common里面接收，即(是写在data外面，理解成独立的一个钩子函数)1props:['indexData'], 输出即可123456&lt;template&gt; &lt;div class=\"table_box\"&gt; &lt;div&gt;id:&#123;&#123;indexData.id&#125;&#125;&lt;/div&gt; &lt;div&gt;text:&#123;&#123;indexData.text&#125;&#125;&lt;/div&gt; &lt;/div&gt;&lt;/template&gt; 通过事件向父级组件发送消息发送信息的方式有两种： 方法1：1.在子组件里输入1&lt;button @click=\"$emit('sonDown','子组件传过来的参数')\"&gt;子组件button&lt;/button&gt; 如果不用传参只需输入1&lt;button @click=\"$emit('sonDown')\"&gt;子组件 2.在父组件接收该信号：1&lt;v-common @sonDown=\"test\"&gt;&lt;/v-common&gt; 在父组件methods钩子函数里面输入：123test(data)&#123; console.log(data || '触发了但是没有传参');&#125; 方法2：1.在子组件里输入1&lt;button button @click=\"sonClick\"&gt;子组件button&lt;/button&gt; 2.methods钩子函数里面输入：123sonClick()&#123; this.$emit(\"sonDown\", \"我也是子组件传过来的参数\")&#125;, 剩下的，和方法1的步骤2一样 select控件向父组件发送信息1.在子组件data(){}里输入1234567891011121314151617181920212223currentValue: 1,select:[ &#123; option:'我是option1', id: 1, &#125;, &#123; option:'我是option2', id: 2, &#125;, &#123; option:'我是option3', id: 3, &#125;, &#123; option:'我是option4', id: 4, &#125;, &#123; option:'我是option5', id: 5, &#125;] 用watch去监听currentValue对象：123456watch: &#123; currentValue(value)&#123; console.log('子组件',this.currentValue); console.log('子组件',value); &#125;&#125; 2.子组件的template部分123&lt;select v-model=\"currentValue\" @change=\"changeValue\"&gt; &lt;option v-for=\"item in select\" :value=\"item.id\" :key=\"item.id\"&gt;&#123;&#123;item.option&#125;&#125;&lt;/option&gt;&lt;/select&gt; 3.在子组件的添加函数123changeValue () &#123; this.$emit(\"change\", this.currentValue);&#125; 4.在父组件里接收1&lt;v-common @change=\"changeProvince\"&gt;&lt;/v-common&gt; 123changeProvince(val)&#123; console.log('父组件',val);&#125;","categories":[],"tags":[{"name":"vue","slug":"vue","permalink":"https://o0foam.github.io/tags/vue/"}]},{"title":"git操作","slug":"git操作","date":"2018-12-14T11:43:09.000Z","updated":"2018-12-25T15:19:30.061Z","comments":true,"path":"2018/12/14/git操作/","link":"","permalink":"https://o0foam.github.io/2018/12/14/git操作/","excerpt":"","text":"首次提交1234567git initgit statusgit remote add origin http://192.168.1.227/xgz/bmctrl-en.gitgit add *git statusgit commit-m &apos;首次提交&apos;git push -u origin master git master让其他人开发你的项目 在git lap里面选择一个项目 点击左侧的settings 点击左侧的members 点击右侧的绿色按钮 add members 在people里选择一个人 在 product access 选择 developer(开发者的意思) 在点击 add users to project 把主分支的项目拉下来12git pullgit merge origin/master 日常提交1234git statusgit add --allgit commit -m &quot;提交的内容&quot;git push 合并请求 git，在vscode里上传代码相当于git add 一个文件相当于git commit再点推送到，选一个网址，最后输入你git的账号和密码（如果是ssh方式就不用输入） 其他","categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://o0foam.github.io/tags/git/"}]},{"title":"vs-code插件整理","slug":"vs-code插件整理","date":"2018-12-14T00:54:28.000Z","updated":"2018-12-18T15:11:15.925Z","comments":true,"path":"2018/12/14/vs-code插件整理/","link":"","permalink":"https://o0foam.github.io/2018/12/14/vs-code插件整理/","excerpt":"","text":"自动匹配tag1Auto Rename Tag 匹配括号1Bracket Pair Colorizer 中文语言包1Chinese (Simplified) Language Pack for Visual Studio Code 吸血鬼主题1Dracula Official 代码规范1ESLint 图片预览1Image preview ES6代码片段1JavaScript (ES6) code snippets markdown语法预览1Markdown Preview Enhanced 格式化1Prettier - Code formatter 检查多余空格1Trailing Spaces vue代码格式1Vetur vue代码片段1VueHelper 英文单词拼写检查1Code Spell Checker 在标签外部添加其他标签1vscode-htmltagwrap css快捷提示（消耗性能）1IntelliSense for CSS class names in HTML 快速搭建服务器1Live Server","categories":[],"tags":[{"name":"others","slug":"others","permalink":"https://o0foam.github.io/tags/others/"}]},{"title":"vue添加i18n","slug":"vue添加i18n","date":"2018-12-12T11:42:31.000Z","updated":"2018-12-18T15:11:50.941Z","comments":true,"path":"2018/12/12/vue添加i18n/","link":"","permalink":"https://o0foam.github.io/2018/12/12/vue添加i18n/","excerpt":"","text":"1.首先在vue-cli里面用命令行引入i18n1npm install vue-i18n 2.新建文件夹lang，然后在里面创建en-US.js、zh-CN.js还有language.js，图片如下3.在main.js里面引入vue-i18n插件1import VueI18n from 'vue-i18n' 4.再通过插件形式进行挂载1Vue.use(VueI18n) 5.语言标识，之后通过this.$i18n.locale进行语言切换。1234const i18n = new VueI18n(&#123; locale: \"cn\", messages: language&#125;) 6.在vue项目里面注入1234567new Vue(&#123; el: '#app', i18n, router, components: &#123; App &#125;, template: '&lt;App/&gt;'&#125;) 7.在en-US.js里面写入123456789const en = &#123; music: 'Music',//网易云音乐 findMusic: 'Find Music',//发现音乐 myMusic: 'My Music',//我的音乐 friend: 'Friend',//朋友 musician: 'Musician',//音乐人 download: 'Download'//下载客户端&#125;export default en; 8.在文件zh-CN.js输入123456789const cn = &#123; music: '网易云音乐', findMusic: '发现音乐', myMusic: '我的音乐', friend: '朋友', musician: '音乐人', download: '下载客户端'&#125;export default cn; 9.在文件language.js输入1234567import en from './en-US'import cn from './zh-CN'const languagePack = &#123; en,cn&#125;export default languagePack; 10.在helloWorld.vue里面输入12345678910111213141516171819202122232425262728293031323334353637&lt;template&gt; &lt;div class=\"hello\"&gt; &lt;p&gt;&#123;&#123;$t('music')&#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123;$t('findMusic')&#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123;$t('myMusic')&#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123;$t('friend')&#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123;$t('musician')&#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123;$t('download')&#125;&#125;&lt;/p&gt; &lt;div&gt; &lt;button @click=\"lang_cn('cn')\"&gt;中文&lt;/button&gt; &lt;button @click=\"lang_en('en')\"&gt;英文&lt;/button&gt; &lt;/div&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123; data () &#123; return&#123;&#125; &#125;, methods: &#123; lang_cn(lang)&#123; console.log(lang) this.$i18n.locale = lang; &#125;, lang_en(lang)&#123; console.log(lang) this.$i18n.locale = lang; &#125; &#125;,&#125;&lt;/script&gt;&lt;style&gt;p &#123; line-height: 20px;&#125;&lt;/style&gt; 大工告成！！！","categories":[],"tags":[{"name":"vue","slug":"vue","permalink":"https://o0foam.github.io/tags/vue/"}]},{"title":"简单vue路由配置","slug":"简单vue路由配置","date":"2018-12-10T11:44:56.000Z","updated":"2018-12-18T15:14:33.659Z","comments":true,"path":"2018/12/10/简单vue路由配置/","link":"","permalink":"https://o0foam.github.io/2018/12/10/简单vue路由配置/","excerpt":"","text":"vue路由默认为Hash模式，可以在routes上添加一个对象1mode: 'history', 来去掉‘#’号 方法11.在components里创建一个名为 testFile.vue 文件2.打开router里面的index.js，用import引入文件(tttFile是一个变量名)1import tttFile from '@/components/testFile' 3.在数组routes里面添加对象12345&#123; path: '/tFile', name: 'ttFile', component: tttFile&#125; path是地址路径 name可以运用在命名路由 component的对象必须是引入的变量名 方法2打开router里面的index.js，直接在routes添加对象12345&#123; path: '/tFile', name: 'ttFile', component: require('@/components/testFile').default&#125;","categories":[],"tags":[{"name":"vue","slug":"vue","permalink":"https://o0foam.github.io/tags/vue/"}]},{"title":"vue-cli2.0搭建过程","slug":"vue-cli2.0搭建过程","date":"2018-12-10T11:07:57.000Z","updated":"2018-12-18T15:11:17.699Z","comments":true,"path":"2018/12/10/vue-cli2.0搭建过程/","link":"","permalink":"https://o0foam.github.io/2018/12/10/vue-cli2.0搭建过程/","excerpt":"","text":"搭建vue环境：1.打开命令行并输入指令1npm install -g vue-cli 2.进入你的文件夹,继续用命令行输入（注：project-name为项目名称）1vue init webpack project-name 3.命令行输完后会跳出一些简单的vue配置参数，可以按照以下格式进行配置：123456789101112131415&lt;!-- 你的项目title --&gt;project name xxx&lt;!-- 默认就可以 --&gt;project description&lt;!-- 作者名 --&gt;author&lt;!-- 默认就可以 --&gt;vue build&lt;!-- 是否要创建路由路由 --&gt;install vue-router? yes&lt;!-- 是否要使用Eslint --&gt;use Eslint to lint your code? noset up unit tests nosetup e2e tests with Nightwatch? noshould we run &apos;npm install&apos; for you after the project has been created? npm 截图如下：4.cd 到你的目录，输入命令行1npm i 等依赖下载完成后，输入1npm run dev 完成运行","categories":[],"tags":[{"name":"vue","slug":"vue","permalink":"https://o0foam.github.io/tags/vue/"}]},{"title":"边框透明度问题","slug":"边框透明度问题","date":"2018-12-07T09:02:27.000Z","updated":"2018-12-18T15:17:43.714Z","comments":true,"path":"2018/12/07/边框透明度问题/","link":"","permalink":"https://o0foam.github.io/2018/12/07/边框透明度问题/","excerpt":"","text":"边框也可以制作透明样式，只是要加一个 background-clip: padding-box; 的样式才能实现 html部分123&lt;div class=\"box\"&gt; out &lt;div class=\"paddingBox\"&gt; in &lt;/div&gt;&lt;/div&gt; css部分1234567891011121314.box &#123; font-size: 30px; background: #12c6aa; height: 300px; width: 300px;&#125;.paddingBox &#123; border: 12px solid rgba(255, 255, 255, 0.6); height: 200px; width: 200px; background-color: #def0ff; border-radius: 6px; background-clip: padding-box;&#125; 成品","categories":[],"tags":[{"name":"css","slug":"css","permalink":"https://o0foam.github.io/tags/css/"}]},{"title":"markdowny语法","slug":"markdowny语法","date":"2018-12-06T15:01:01.000Z","updated":"2018-12-18T15:17:38.931Z","comments":true,"path":"2018/12/06/markdowny语法/","link":"","permalink":"https://o0foam.github.io/2018/12/06/markdowny语法/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556# 这是一级标题## 这是二级标题### 这是三级标题#### 这是四级标题##### 这是五级标题###### 这是六级标题** 要加粗的文字左右分别用两个*号包起来 ***要倾斜的文字左右分别用一个*号包起来****要倾斜和加粗的文字左右分别用三个*号包起来***~~要加删除线的文字左右分别用两个~号包起来~~&gt;这是引用的内容&gt;&gt;这是引用的内容&gt;&gt;&gt;这是引用的内容分割线用三个或者三个以上的 - 或者 * 都可以。---***![图片alt](图片地址 &apos;&apos;图片title&apos;&apos;)图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加。如果用hexo博客引入文件，图片地址要用绝对路径，/img/图片.jpg，其中img文件夹在sourcce目录里面。[超链接名](超链接地址 &quot;超链接title&quot;)title可加可不加无序列表用 - + * 任何一种都可以- 列表内容+ 列表内容* 列表内容有序列表 数字加点1. 列表内容2. 列表内容3. 列表内容表格姓名|技能|排行--|:--:|--:刘备|哭|大哥关羽|打|二哥张飞|骂|三弟第二行分割表头和内容。- 有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略代码块(``` javascript) 代码... 代码... 代码...(```)注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。 百度 姓名 技能 排行d 刘备 哭 大哥 关羽 打 二哥 张飞 骂 三弟 1234function fun()&#123; console.log(\"这是一句非常牛d逼的代码\");&#125;fun();","categories":[],"tags":[{"name":"others","slug":"others","permalink":"https://o0foam.github.io/tags/others/"}]},{"title":"markdowny语法","slug":"markdowny语法 ","date":"2018-12-06T15:01:01.000Z","updated":"2018-12-28T13:48:09.826Z","comments":true,"path":"2018/12/06/markdowny语法 /","link":"","permalink":"https://o0foam.github.io/2018/12/06/markdowny语法 /","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263# 这是一级标题## 这是二级标题### 这是三级标题#### 这是四级标题##### 这是五级标题###### 这是六级标题** 要加粗的文字左右分别用两个*号包起来 ***要倾斜的文字左右分别用一个*号包起来****要倾斜和加粗的文字左右分别用三个*号包起来***~~要加删除线的文字左右分别用两个~号包起来~~&gt;这是引用的内容&gt;&gt;这是引用的内容&gt;&gt;&gt;这是引用的内容分割线用三个或者三个以上的 - 或者 * 都可以。---***![图片alt](图片地址 &apos;&apos;图片title&apos;&apos;)图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加。如果用hexo博客引入文件，图片地址要用绝对路径，/img/图片.jpg，其中img文件夹在sourcce目录里面。[超链接名](超链接地址 &quot;超链接title&quot;)title可加可不加无序列表用 - + * 任何一种都可以- 列表内容+ 列表内容* 列表内容有序列表 数字加点1. 列表内容2. 列表内容3. 列表内容表格姓名|技能|排行--|:--:|--:刘备|哭|大哥关羽|打|二哥张飞|骂|三弟第二行分割表头和内容。- 有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略代码块(``` javascript) 代码... 代码... 代码...(```)注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。&lt;font color=#0099ff size=7&gt;color=#0099ff size=72 face=&quot;有颜色的字体&quot;&lt;/font&gt;&lt;font color=#00ffff size=72&gt;color=#00ffff&lt;/font&gt;&lt;font color=gray size=72&gt;color=gray&lt;/font&gt;Size：规定文本的尺寸大小。可能的值：从 1 到 7 的数字。浏览器默认值是 3。&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#7FFFD4&gt;这里的背景色是：Aquamarine， 十六进制颜色值：#7FFFD4， rgb(127, 255, 212)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; 这里的背景色是：Aquamarine， 十六进制颜色值：#7FFFD4， rgb(127, 255, 212) color=#0099ff size=72 face=”有颜色的字体” color=#00ffff color=gray百度 姓名 技能 排行d 刘备 哭 大哥 关羽 打 二哥 张飞 骂 三弟 1234function fun()&#123; console.log(\"这是一句非常牛d逼的代码\");&#125;fun();","categories":[],"tags":[{"name":"others","slug":"others","permalink":"https://o0foam.github.io/tags/others/"}]}]}